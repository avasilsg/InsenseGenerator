
type sensorReading is struct (
	integer photo;
	integer solar;
	real temp;
	real humid;
)

type ISensorReader is interface
(
	in bool ticks;
	out sensorReading printChan;
	out sensorReading ledsChan;
)
type IPrintOutput is interface
(
	in sensorReading input;
)
type ILedOutput is interface
(
	in sensorReading input;
)
component SensorReader presents ISensorReader
{

	constructor ()
	{
	}

	behaviour 
	{
		receive tick from ticks
		photoValue = photoReading()

		solarValue = solarReading()

		tempValue = tempCelsiusReading()

		humdityValue = relHumidReading()

		reading = new  SensorReading( photoValue, solarValue, tempValue, humidityValuereading)

		send reading on ledsChan
		send reading on printChan
	}
}
component PrintOutput presents IPrintOutput
{

	cycle = 0
	constructor ()
	{
	}

	behaviour 
	{
		receive reading from input

		printString("Cycle ")



		printString(":\tphoto = ")



		printString("\tsolar = ")



		printString("\ttemp = ")



		printString("\thumid = ")



		printInt("\n")
		cycle = cycle+1

	}
}
component LedOutput presents ILedOutput
{

	avgTemp = 0.0
	avgSolar = 0
	avgHumid = 0.0
	constructor ()
	{
	}

	behaviour 
	{
		receive reading from input
	}
}
sr = new SensorReader()
lo = new LedOutput()
po = new PrintOutput()
connect sr.printChan to po.input
connect sr.ledsChan to lo.input